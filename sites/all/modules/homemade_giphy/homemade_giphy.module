<?php
/**
 * @file
 * Search Giphy.
 */


define('GIPHY_SEARCH_URL', 'http://api.giphy.com/v1/gifs/search');
define('GIPHY_API_KEY', 'dc6zaTOxFJmzC');

/**
 * Implements hook_menu().
 */
function homemade_giphy_menu() {
  $items['homemade/giphy'] = array(
    'title' => 'Search the Giphy API',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('homemade_giphy_search_form'),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['homemade/giphy/results/%/%'] = array(
    'title' => 'Giphy results page',
    'page callback' => 'homemade_giphy_result_page',
    'page arguments' => array(3, 4),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function homemade_giphy_theme($existing, $type, $theme, $path) {
  return array(
    'homemade_giphy_result_list' => array(
      'variables' => array(
        'result' => array(),
        'image_size' => NULL,
      ),
    ),
  );
}

/**
 * The search form.
 */
function homemade_giphy_search_form($form, &$form_state) {
  $form['search_query'] = array(
    '#title' => t('Enter your search query'),
    '#type' => 'textfield',
    '#required' => TRUE,
  );

  $form['image_size'] = array(
    '#title' => t('Select the image size you want to show in the results'),
    '#type' => 'select',
    '#default_value' => 'fixed_height',
    '#options' => array(
      'fixed_height' => t('Fixed height'),
      'fixed_height_still' => t('Fixed height still'),
      'fixed_height_downsampled' => t('Fixed height downsampled'),
      'fixed_width' => t('Fixed width'),
      'fixed_width_still' => t('Fixed width still'),
      'fixed_width_downsampled' => t('Fixed width downsampled'),
      'fixed_height_small' => t('Fixed height small'),
      'fixed_height_small_still' => t('Fixed height small still'),
      'fixed_width_small' => t('Fixed width small'),
    ),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Search'),
  );

  return $form;
}

/**
 * Form submit handler for homemade_giphy_search_form().
 */
function homemade_giphy_search_form_submit($form, &$form_state) {
  $search_query = urlencode($form_state['values']['search_query']);
  $image_size = urlencode($form_state['values']['image_size']);
  $form_state['redirect'] = 'homemade/giphy/results/' . $search_query . '/' . $image_size;
}

/**
 * Return the search result page.
 *
 * @param $search_query string
 *   The search query.
 * @param $image_size string
 *   The image size filter selected.
 * @return string
 *   The themed search result list.
 */
function homemade_giphy_result_page($search_query, $image_size) {
  $search_url = GIPHY_SEARCH_URL . '?q=' . $search_query . '&api_key=' . GIPHY_API_KEY;

  try {
    $response = drupal_http_request($search_url);
  }
  catch (Exception $e) {
    watchdog_exception('homemade_giphy', $e);
  }

  $result = drupal_json_decode($response->data);

  return theme('homemade_giphy_result_list', array(
    'result' => $result,
    'image_size' => $image_size
  ));
}

/**
 * Return the themed search result list.
 *
 * @param $variables array
 *   The theme variables.
 * @return string
 *   The search result list.
 */
function theme_homemade_giphy_result_list($variables) {
  $items = array();
  foreach ($variables['result']['data'] as $image) {
    $gif = theme('image', array(
      'path' => $image['images'][$variables['image_size']]['url'],
      'width' => $image['images'][$variables['image_size']]['width'],
      'height' => $image['images'][$variables['image_size']]['height'],
      'title' => t('!slug - rated !rating.', array('!slug' => $image['slug'], '!rating' => $image['rating'])),
    ));
    $items[$image['id']] = array(
      'data' => l($gif, $image['url'], array('html' => TRUE)),
    );
  }
  return theme('item_list', array('items' => $items));
}